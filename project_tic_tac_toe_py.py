# -*- coding: utf-8 -*-
"""project    tic-tac-toe.py.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uqM6ww26kQ4bPzp7aY17uSyV9aLh6MrL
"""

# small introduction of the game 
import random,sys,time

n=[j for j in range(1,10)]
game_board=[" " for i in range(9)]
print("...TIC-TAC-TOE...")
print()

     #Designing function for  the game board
def print_game_board():
  row1="|{}|{}|{}|".format(game_board[0],game_board[1],game_board[2])
  row2="|{}|{}|{}|".format(game_board[3],game_board[4],game_board[5])
  row3="|{}|{}|{}|".format(game_board[6],game_board[7],game_board[8])
  print(row1)
  print(row2)
  print(row3)

     #Designing function for the players moves 
def player_move(icon):  #To select player1 or 2 by the icons
  if icon=="X":
    number=1
  elif icon=="O":
    number=2
  print("It's your chance player {}".format(number))
  choice1=int(input("Enter your move(1-9):").strip()) # To enter the move of the player
  if choice1>0 and choice1<=9:
    if game_board[choice1-1]==" ":
      game_board[choice1-1]=icon
    else:
      print()
      print("The space already occupied by one of the player....  :(")
      print()
      player_move(icon)
  else:
    print("Your move is invalid .....  please enter again")
    player_move(icon)

     #Designing function for the computer moves
def computer_move(icon):
  n1=random.choice(n)
  print("It's computer chance  ")
  time.sleep(2)
  if game_board[n1-1]==" ":
      game_board[n1-1]=icon
  else:
    print("The space already occupied by one of the player....  :(")
    print()
    computer_move(icon)

     #Designing a function for the winner 
def winner_is(icon):
  if (game_board[0]==icon and game_board[1]==icon and game_board[2]==icon) or\
     (game_board[3]==icon and game_board[4]==icon and game_board[5]==icon) or\
     (game_board[6]==icon and game_board[7]==icon and game_board[8]==icon) or\
     (game_board[0]==icon and game_board[3]==icon and game_board[6]==icon) or\
     (game_board[1]==icon and game_board[4]==icon and game_board[7]==icon) or\
     (game_board[2]==icon and game_board[5]==icon and game_board[8]==icon) or\
     (game_board[0]==icon and game_board[4]==icon and game_board[8]==icon) or\
     (game_board[2]==icon and game_board[4]==icon and game_board[6]==icon):
    return True
  else:
    return False

    #Designing a function for a draw match
def match_draw():
  if " " not in game_board:
    return True 
  else:
    return False

#  Program for the game
while True:
  ch=int(input("...which mode do you want to play...\n 1. -> Computer  Vs  Player \n 2. ->Player Vs Player \n   your choice:"))
  if ch==1:
    while True:
      print_game_board()
      player_move("X")
      print_game_board()
      if winner_is("X"):
        print(" You won the match  \n***Congratulations***")
        sys.exit()
      elif match_draw():
        print("*** The match is draw ***")
        sys.exit()
      computer_move("O")
      if winner_is("O"):
        print_game_board()
        print(" You lost  the match  \n***Better luck next time***")
        sys.exit()
      elif match_draw():
        print("*** The match is draw ***")
        sys.exit()
  elif ch==2:
    while True:
      print_game_board()
      player_move("X")
      print_game_board()
      if winner_is("X"):
        print(" Player 1 won the match  \n***Congratulations***")
        sys.exit()
      elif match_draw():
        print("*** The match is draw ***")
        sys.exit()
      player_move("O")
      if winner_is("O"):
        print_game_board()
        print(" Player 2 won the match  \n***Congratulations***")
        sys.exit()
      elif match_draw():
        print("*** The match is draw ***")
        sys.exit()
  else:
    print("Enter again")

